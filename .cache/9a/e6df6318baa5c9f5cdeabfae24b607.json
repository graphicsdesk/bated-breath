{"id":"scripts/utils.js","dependencies":[{"name":"/home/jessica/bated-breath/package.json","includedInParent":true,"mtime":1610126280707}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.intersectTop = intersectTop;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction intersectTop(_ref) {\n  var node = _ref.node,\n      onEnter = _ref.onEnter,\n      onExit = _ref.onExit;\n  var observer = new IntersectionObserver(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 1),\n        entry = _ref3[0];\n\n    var isIntersecting = entry.isIntersecting,\n        top = entry.boundingClientRect.top;\n\n    if (!isIntersecting && top < 0) {\n      // Enter at the top\n      onEnter();\n    } else if (isIntersecting && top < window.innerHeight / 2) {\n      // Exit from the top\n      onExit();\n    }\n  }, {\n    threshold: 1\n  });\n  observer.observe(node);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":20,"column":0},"source":"scripts/utils.js","original":{"line":1,"column":7}},{"name":"intersectTop","generated":{"line":20,"column":9},"source":"scripts/utils.js","original":{"line":1,"column":16}},{"generated":{"line":20,"column":21},"source":"scripts/utils.js","original":{"line":1,"column":7}},{"generated":{"line":20,"column":28},"source":"scripts/utils.js","original":{"line":1,"column":56}},{"generated":{"line":21,"column":0},"source":"scripts/utils.js","original":{"line":1,"column":56}},{"name":"node","generated":{"line":21,"column":6},"source":"scripts/utils.js","original":{"line":1,"column":31}},{"generated":{"line":21,"column":10},"source":"scripts/utils.js","original":{"line":1,"column":56}},{"name":"node","generated":{"line":21,"column":18},"source":"scripts/utils.js","original":{"line":1,"column":31}},{"generated":{"line":21,"column":22},"source":"scripts/utils.js","original":{"line":1,"column":56}},{"generated":{"line":22,"column":0},"source":"scripts/utils.js","original":{"line":1,"column":56}},{"name":"onEnter","generated":{"line":22,"column":6},"source":"scripts/utils.js","original":{"line":1,"column":37}},{"generated":{"line":22,"column":13},"source":"scripts/utils.js","original":{"line":1,"column":56}},{"name":"onEnter","generated":{"line":22,"column":21},"source":"scripts/utils.js","original":{"line":1,"column":37}},{"generated":{"line":22,"column":28},"source":"scripts/utils.js","original":{"line":1,"column":56}},{"generated":{"line":23,"column":0},"source":"scripts/utils.js","original":{"line":1,"column":56}},{"name":"onExit","generated":{"line":23,"column":6},"source":"scripts/utils.js","original":{"line":1,"column":46}},{"generated":{"line":23,"column":12},"source":"scripts/utils.js","original":{"line":1,"column":56}},{"name":"onExit","generated":{"line":23,"column":20},"source":"scripts/utils.js","original":{"line":1,"column":46}},{"generated":{"line":23,"column":26},"source":"scripts/utils.js","original":{"line":1,"column":56}},{"generated":{"line":24,"column":0},"source":"scripts/utils.js","original":{"line":2,"column":2}},{"name":"observer","generated":{"line":24,"column":6},"source":"scripts/utils.js","original":{"line":2,"column":8}},{"generated":{"line":24,"column":14},"source":"scripts/utils.js","original":{"line":2,"column":16}},{"generated":{"line":24,"column":17},"source":"scripts/utils.js","original":{"line":2,"column":19}},{"name":"IntersectionObserver","generated":{"line":24,"column":21},"source":"scripts/utils.js","original":{"line":2,"column":23}},{"generated":{"line":24,"column":41},"source":"scripts/utils.js","original":{"line":2,"column":19}},{"generated":{"line":24,"column":42},"source":"scripts/utils.js","original":{"line":3,"column":4}},{"generated":{"line":24,"column":59},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"generated":{"line":25,"column":0},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"generated":{"line":26,"column":0},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"name":"entry","generated":{"line":26,"column":8},"source":"scripts/utils.js","original":{"line":3,"column":6}},{"generated":{"line":26,"column":13},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"generated":{"line":28,"column":0},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"name":"isIntersecting","generated":{"line":28,"column":8},"source":"scripts/utils.js","original":{"line":5,"column":8}},{"generated":{"line":28,"column":22},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"name":"entry","generated":{"line":28,"column":25},"source":"scripts/utils.js","original":{"line":7,"column":10}},{"generated":{"line":28,"column":30},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"name":"isIntersecting","generated":{"line":28,"column":31},"source":"scripts/utils.js","original":{"line":5,"column":8}},{"generated":{"line":28,"column":45},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"generated":{"line":29,"column":0},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"name":"top","generated":{"line":29,"column":8},"source":"scripts/utils.js","original":{"line":6,"column":30}},{"generated":{"line":29,"column":11},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"name":"entry","generated":{"line":29,"column":14},"source":"scripts/utils.js","original":{"line":7,"column":10}},{"generated":{"line":29,"column":19},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"name":"boundingClientRect","generated":{"line":29,"column":20},"source":"scripts/utils.js","original":{"line":6,"column":8}},{"generated":{"line":29,"column":38},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"name":"top","generated":{"line":29,"column":39},"source":"scripts/utils.js","original":{"line":6,"column":30}},{"generated":{"line":29,"column":42},"source":"scripts/utils.js","original":{"line":3,"column":17}},{"generated":{"line":31,"column":0},"source":"scripts/utils.js","original":{"line":8,"column":6}},{"generated":{"line":31,"column":8},"source":"scripts/utils.js","original":{"line":8,"column":10}},{"name":"isIntersecting","generated":{"line":31,"column":9},"source":"scripts/utils.js","original":{"line":8,"column":11}},{"generated":{"line":31,"column":23},"source":"scripts/utils.js","original":{"line":8,"column":10}},{"name":"top","generated":{"line":31,"column":27},"source":"scripts/utils.js","original":{"line":8,"column":29}},{"generated":{"line":31,"column":30},"source":"scripts/utils.js","original":{"line":8,"column":32}},{"generated":{"line":31,"column":33},"source":"scripts/utils.js","original":{"line":8,"column":35}},{"generated":{"line":31,"column":34},"source":"scripts/utils.js","original":{"line":8,"column":6}},{"generated":{"line":31,"column":36},"source":"scripts/utils.js","original":{"line":8,"column":38}},{"generated":{"line":32,"column":0},"source":"scripts/utils.js","original":{"line":9,"column":8}},{"name":"onEnter","generated":{"line":33,"column":0},"source":"scripts/utils.js","original":{"line":10,"column":8}},{"name":"onEnter","generated":{"line":33,"column":6},"source":"scripts/utils.js","original":{"line":10,"column":8}},{"generated":{"line":33,"column":13},"source":"scripts/utils.js","original":{"line":10,"column":15}},{"generated":{"line":34,"column":0},"source":"scripts/utils.js","original":{"line":11,"column":7}},{"generated":{"line":34,"column":5},"source":"scripts/utils.js","original":{"line":8,"column":6}},{"generated":{"line":34,"column":11},"source":"scripts/utils.js","original":{"line":11,"column":13}},{"name":"isIntersecting","generated":{"line":34,"column":15},"source":"scripts/utils.js","original":{"line":11,"column":17}},{"generated":{"line":34,"column":29},"source":"scripts/utils.js","original":{"line":11,"column":31}},{"name":"top","generated":{"line":34,"column":33},"source":"scripts/utils.js","original":{"line":11,"column":35}},{"generated":{"line":34,"column":36},"source":"scripts/utils.js","original":{"line":11,"column":38}},{"name":"window","generated":{"line":34,"column":39},"source":"scripts/utils.js","original":{"line":11,"column":41}},{"generated":{"line":34,"column":45},"source":"scripts/utils.js","original":{"line":11,"column":47}},{"name":"innerHeight","generated":{"line":34,"column":46},"source":"scripts/utils.js","original":{"line":11,"column":48}},{"generated":{"line":34,"column":57},"source":"scripts/utils.js","original":{"line":11,"column":41}},{"generated":{"line":34,"column":60},"source":"scripts/utils.js","original":{"line":11,"column":62}},{"generated":{"line":34,"column":61},"source":"scripts/utils.js","original":{"line":11,"column":13}},{"generated":{"line":34,"column":63},"source":"scripts/utils.js","original":{"line":11,"column":65}},{"generated":{"line":35,"column":0},"source":"scripts/utils.js","original":{"line":12,"column":8}},{"name":"onExit","generated":{"line":36,"column":0},"source":"scripts/utils.js","original":{"line":13,"column":8}},{"name":"onExit","generated":{"line":36,"column":6},"source":"scripts/utils.js","original":{"line":13,"column":8}},{"generated":{"line":36,"column":12},"source":"scripts/utils.js","original":{"line":13,"column":14}},{"generated":{"line":37,"column":0},"source":"scripts/utils.js","original":{"line":14,"column":7}},{"generated":{"line":38,"column":0},"source":"scripts/utils.js","original":{"line":15,"column":5}},{"generated":{"line":38,"column":3},"source":"scripts/utils.js","original":{"line":2,"column":19}},{"generated":{"line":38,"column":5},"source":"scripts/utils.js","original":{"line":16,"column":4}},{"name":"threshold","generated":{"line":39,"column":0},"source":"scripts/utils.js","original":{"line":16,"column":6}},{"name":"threshold","generated":{"line":39,"column":4},"source":"scripts/utils.js","original":{"line":16,"column":6}},{"generated":{"line":39,"column":13},"source":"scripts/utils.js","original":{"line":16,"column":15}},{"generated":{"line":39,"column":15},"source":"scripts/utils.js","original":{"line":16,"column":17}},{"generated":{"line":40,"column":0},"source":"scripts/utils.js","original":{"line":16,"column":4}},{"generated":{"line":40,"column":3},"source":"scripts/utils.js","original":{"line":2,"column":19}},{"generated":{"line":40,"column":4},"source":"scripts/utils.js","original":{"line":2,"column":2}},{"name":"observer","generated":{"line":41,"column":0},"source":"scripts/utils.js","original":{"line":18,"column":2}},{"name":"observer","generated":{"line":41,"column":2},"source":"scripts/utils.js","original":{"line":18,"column":2}},{"generated":{"line":41,"column":10},"source":"scripts/utils.js","original":{"line":18,"column":10}},{"name":"observe","generated":{"line":41,"column":11},"source":"scripts/utils.js","original":{"line":18,"column":11}},{"generated":{"line":41,"column":18},"source":"scripts/utils.js","original":{"line":18,"column":2}},{"name":"node","generated":{"line":41,"column":19},"source":"scripts/utils.js","original":{"line":18,"column":19}},{"generated":{"line":41,"column":23},"source":"scripts/utils.js","original":{"line":18,"column":2}},{"generated":{"line":42,"column":0},"source":"scripts/utils.js","original":{"line":19,"column":1}}],"sources":{"scripts/utils.js":"export function intersectTop({ node, onEnter, onExit }) {\n  const observer = new IntersectionObserver(\n    ([entry]) => {\n      const {\n        isIntersecting,\n        boundingClientRect: { top },\n      } = entry;\n      if (!isIntersecting && top < 0) {\n        // Enter at the top\n        onEnter();\n      } else if (isIntersecting && top < window.innerHeight / 2) {\n        // Exit from the top\n        onExit();\n      }\n    },\n    { threshold: 1 },\n  );\n  observer.observe(node);\n}\n"},"lineCount":null}},"error":null,"hash":"9a8fd50afe1878df4c9d7767590f4bd3","cacheData":{"env":{}}}